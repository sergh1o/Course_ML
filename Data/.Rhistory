# задаем рабочий каталог
setwd("/Users/artemgruzdev/Documents/Курс/Course_ML/Data")
# загружаем данные
data <- read.csv2("Vodafone_missing.csv",
sep = ";",
na.strings = "")
str(data)
names <- c("tenure", "age")
names <- c("tenure", "age")
# загружаем пакет caret
library(caret)
# строим модель – вычисляем средние и стандартные
# отклонения переменных, необходимые для преобразования
trans <- preProcess(development, method = c("center", "scale"))
# применяем модель к обучающему и контрольному наборам
development[, names] <- predict(trans, development[, names])
holdout[, names] <- predict(trans, holdout[, names])
setwd("/Users/artemgruzdev/Documents/Курс/Course_ML/Data")
# загружаем данные
data <- read.csv2("Vodafone_missing.csv",
sep = ";",
na.strings = "")
str(data)
# разбиваем данные на обучающие и тестовые
set.seed(100)
ind <- sample(2, nrow(data),
replace = TRUE,
prob = c(0.7, 0.3))
development <- data[ind == 1, ]
holdout <- data[ind == 2, ]
names <- c("tenure", "age")
# загружаем пакет caret
library(caret)
# строим модель – вычисляем средние и стандартные
# отклонения переменных, необходимые для преобразования
trans <- preProcess(development, method = c("center", "scale"))
# применяем модель к обучающему и контрольному наборам
development[, names] <- predict(trans, development[, names])
holdout[, names] <- predict(trans, holdout[, names])
names
str(data)
str(development)
development[, names]
ames <- c("tenure", "age")
# загружаем пакет caret
library(caret)
# строим модель – вычисляем средние и стандартные
# отклонения переменных, необходимые для преобразования
trans <- preProcess(development[, names], method = c("center", "scale"))
# применяем модель к обучающему и контрольному наборам
development[, names] <- predict(trans, development[, names])
holdout[, names] <- predict(trans, holdout[, names])
# задаем рабочий каталог
setwd("/Users/artemgruzdev/Documents/Курс/Course_ML/Data")
# загружаем данные
data <- read.csv2("Vodafone_missing.csv",
sep = ";",
na.strings = "")
str(development)
# разбиваем данные на обучающие и тестовые
set.seed(100)
ind <- sample(2, nrow(data),
replace = TRUE,
prob = c(0.7, 0.3))
development <- data[ind == 1, ]
holdout <- data[ind == 2, ]
head(development, 10)
names <- c("tenure", "age")
# загружаем пакет caret
library(caret)
# строим модель – вычисляем средние и стандартные
# отклонения переменных, необходимые для преобразования
trans <- preProcess(development[, names], method = c("center", "scale"))
# применяем модель к обучающему и контрольному наборам
development[, names] <- predict(trans, development[, names])
holdout[, names] <- predict(trans, holdout[, names])
head(development, 10)
# выделяем количественные переменные в отдельный список
var <- names(development[sapply(development, is.numeric)])
# создаем копию обучающего набора
development_copy <- development
# выполняем стандартизацию
for(v in var) {
development[[v]] <- (development[[v]] - mean(development[[v]])) / sd(development[[v]])
holdout[[v]] <- (holdout[[v]] - mean(development_copy[[v]])) / sd(development_copy[[v]])
}
# выполняем стандартизацию
for(v in var) {
development[[v]] <- (development[[v]] - mean(development[[v]])) /
sd(development[[v]])
holdout[[v]] <- (holdout[[v]] - mean(development_copy[[v]])) /
sd(development_copy[[v]])
}
